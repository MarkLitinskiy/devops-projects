#! /bin/bash

$(mkdir logs 2>/dev/null)                  # создаём папку для лог-файлов
countOfLogfiles=5                          # кол-во лог-файлов
randomCountOfLogs=$(shuf -i 100-1000 -n 1) # кол-во логов в файле
todayDate=$(date +"%Y-%m-%d 00:00:01")     # сегодняшняя дата
todayInSec=$(date -d "$todayDate" +%s)     # сегодняшняя дата в секундах

for ((i = 1; i <= countOfLogfiles; i++)); do      # цикл отвечающий за кол-во файлов
    $(touch logs/logfile${i}.log)                 # добавляем файл лога
    randomAddSec=0                                # кол-во добавляемых секунд для даты лога
    for ((j = 0; j < randomCountOfLogs; j++)); do # цикл отвечающий за кол-во логов
        randomIp=$(shuf -n 1 <ip)                 # обновляем все переменные для текущего лога
        randomAnswerCode=$(shuf -n 1 <answer_codes)
        randomMethod=$(shuf -n 1 <methods)
        let randomAddSec+=$(shuf -i 30-75 -n 1)
        let date=todayInSec+randomAddSec
        randomURL=$(shuf -n 1 <url)
        randomAgent=$(shuf -n 1 <agents)
        $(echo -e "$randomIp\t$randomAnswerCode\t$randomMethod\t$(date -d @${date} +"%Y-%m-%d\t%H:%M:%S")\t$randomURL\t$randomAgent" >>logs/logfile${i}.log) # делаем запись в лог
    done
    let todayInSec+=86400                      # +1 день
    randomCountOfLogs=$(shuf -i 100-1000 -n 1) # обновляем кол-во логов в следующем файле
done

# Коды ответов:

# Код 200 обозначает, что запрос пользователя выполнен успешно, и страница, на которую он
# переходил, найдена и отображена. Если все происходит по предусмотренному сценарию,
# пользователи чаще всего даже не будут получать это сообщение.

# Код 201 об успешном статусе указывает, что запрос выполнен успешно и привёл к созданию ресурса.
# Новый ресурс эффективно создаётся до отправки этого ответа. И новый ресурс возвращается в теле сообщения,
# его местоположение представляет собой либо URL-адрес запроса, либо содержимое заголовка.

# Код состояния ответа "HTTP 400 Bad Request" указывает, что сервер не смог понять запрос из-за недействительного
# синтаксиса. Клиент не должен повторять этот запрос без изменений.

# Код ответа на статус ошибки "HTTP 401 Unauthorized" клиента указывает, что запрос не был применён,
# поскольку ему не хватает действительных учётных данных для целевого ресурса.

# Код ответа на статус ошибки "HTTP 403 Forbidden" указывает, что сервер понял запрос, но отказывается его авторизовать.
# Этот статус похож на 401, но в этом случае повторная аутентификация не будет иметь никакого значения.
# Доступ запрещён и привязан к логике приложения (например, у пользователя не хватает прав доступа
# к запрашиваемому ресурсу).

# Код ответа на ошибку "HTTP 404 Not Found" указывает, что сервер не может найти запрошенный ресурс.
# Ссылки, ведущие к коду 404, часто называются сломанными или мёртвыми связями.
# Код статуса 404 не уточняет, отсутствует ли запрашиваемый ресурс временно или постоянно.
# Но если серверу известно, что указанный ресурс удалён навсегда, то вместо статуса 404
# следует использовать 410 (Gone).

# Код ответа сервера "500 Internal Server Error" указывает на то, что сервер столкнулся с неожиданной ошибкой,
# которая помешала ему выполнить запрос.
# Этот код является обобщённым ответом на перехват всех исключений, которые не были обработаны должным образом.
# Обычно это означает, что сервер не смог найти более подходящего кода ответа. Зачастую администраторы сервера
# регистрируют (логируют) сообщения об ошибках, подобных коду состояния 500 (включая дополнительную информацию
# о запросе), чтобы предотвратить повторение ошибки в будущем.

# "The HTTP 501 Not Implemented" серверный код ответа на ошибку указывает, что метод запроса не поддерживается
# сервером и не может быть обработан. Единственными методами, которые необходимы серверам для поддержки
# (и, следовательно, не должны возвращать этот код), являются GET и HEAD.

# HTTP серверный код ответа на ошибку "502 Bad Gateway" указывает, что сервер, действуя как шлюз или прокси,
# получил неверный ответ от восходящего сервера.

# "HTTP 503 Service Unavailable" код состояния сервера, указывающий на то, что сервер не готов обработать данный запрос.
# Часто причиной этого оказывается закрытие сервера для технических работ или его перегрузка. Обратите внимание,
# что вместе с этим ответом следует отправить удобную для пользователя страницу, объясняющую проблему.
# Данный код должен использоваться для временных состояний, а HTTP-заголовок Retry-After должен, по возможности,
# содержать предполагаемое время возвращения в работу.
